// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Service.Models;

namespace Service.Migrations
{
    [DbContext(typeof(QLShopContext))]
    [Migration("20230107154244_InitialThanhVien")]
    partial class InitialThanhVien
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Service.Models.Chitietdonhang", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Diachi")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("DonHangId")
                        .HasColumnType("int")
                        .HasColumnName("DonHangID");

                    b.Property<int>("KhuyenMaiId")
                        .HasColumnType("int")
                        .HasColumnName("KhuyenMaiID");

                    b.Property<double>("PhiShip")
                        .HasColumnType("float");

                    b.Property<int>("SanPhamId")
                        .HasColumnType("int")
                        .HasColumnName("SanPhamID");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("char(12)")
                        .IsFixedLength(true);

                    b.Property<string>("TenNguoiNhan")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<short>("TinhTrangDonHang")
                        .HasColumnType("smallint");

                    b.Property<double>("TongTien")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.HasIndex("DonHangId");

                    b.HasIndex("SanPhamId");

                    b.ToTable("Chitietdonhang");
                });

            modelBuilder.Entity("Service.Models.Chucnang", b =>
                {
                    b.Property<string>("Amthanh")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("BaoHanhId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BaoHanhID");

                    b.Property<string>("BaoMat")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BoNhoLuuTru")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("BoXuLy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Camera")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GiaoTiepKetNoi")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("HeDieuHanh")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("LoaiHangId")
                        .HasColumnType("int")
                        .HasColumnName("LoaiHangID");

                    b.Property<string>("ManHinh")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Pin")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("SanPhamId")
                        .HasColumnType("int")
                        .HasColumnName("SanPhamID");

                    b.Property<string>("ThietKe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vga")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasIndex("LoaiHangId");

                    b.HasIndex("SanPhamId");

                    b.ToTable("Chucnang");
                });

            modelBuilder.Entity("Service.Models.Donhang", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("GiamGia")
                        .HasColumnType("float");

                    b.Property<string>("MaGiamGia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("date");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("date");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PhiShip")
                        .HasColumnType("float");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("char(12)")
                        .IsFixedLength(true);

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<short>("TinhTrangDonHang")
                        .HasColumnType("smallint");

                    b.Property<double>("TongTien")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Donhang");
                });

            modelBuilder.Entity("Service.Models.Hinh", b =>
                {
                    b.Property<int>("HinhId")
                        .HasColumnType("int")
                        .HasColumnName("HinhID");

                    b.Property<string>("Carousel")
                        .HasMaxLength(500)
                        .HasColumnType("nchar(500)")
                        .IsFixedLength(true);

                    b.Property<string>("Thumbnails")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nchar(500)")
                        .IsFixedLength(true);

                    b.HasKey("HinhId");

                    b.ToTable("Hinh");
                });

            modelBuilder.Entity("Service.Models.Khuyenmai", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("LoaiHangId")
                        .HasColumnType("int")
                        .HasColumnName("LoaiHangID");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("date");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("date");

                    b.Property<double>("PhanTramGiam")
                        .HasColumnType("float");

                    b.Property<string>("QuaTangKem")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VoucherTangKem")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("khuyenmai");
                });

            modelBuilder.Entity("Service.Models.Loaihang", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenLoaiHang")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Loaihang");
                });

            modelBuilder.Entity("Service.Models.Sanpham", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("Gia")
                        .HasColumnType("int");

                    b.Property<int>("GiaSanPham")
                        .HasColumnType("int");

                    b.Property<double>("GiamGia")
                        .HasColumnType("float");

                    b.Property<string>("HinhSanPham")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("KhuyenMaiId")
                        .HasColumnType("int")
                        .HasColumnName("KhuyenMaiID");

                    b.Property<int>("LoaiHangId")
                        .HasColumnType("int")
                        .HasColumnName("LoaiHangID");

                    b.Property<string>("MaSanPham")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("date");

                    b.Property<DateTime>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ThongTin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ThuongHieuId")
                        .HasColumnType("int");

                    b.Property<bool?>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.HasIndex("KhuyenMaiId");

                    b.HasIndex("ThuongHieuId");

                    b.HasIndex("UserId");

                    b.ToTable("Sanpham");
                });

            modelBuilder.Entity("Service.Models.ThanhVien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("KichHoat")
                        .HasColumnType("bit");

                    b.Property<string>("MatKhau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SocialLogin")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ThanhViens");
                });

            modelBuilder.Entity("Service.Models.Thuonghieu", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Nuoc")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true);

                    b.Property<string>("TenThuongHieu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Thuonghieu");
                });

            modelBuilder.Entity("Service.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Diachi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("date");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("char(12)")
                        .IsFixedLength(true);

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TenLot")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ThanhPho")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ThongTin")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Service.Models.Chitietdonhang", b =>
                {
                    b.HasOne("Service.Models.Donhang", "DonHang")
                        .WithMany("Chitietdonhangs")
                        .HasForeignKey("DonHangId")
                        .HasConstraintName("FK_Chitietdonhang_donhang")
                        .IsRequired();

                    b.HasOne("Service.Models.Sanpham", "SanPham")
                        .WithMany("Chitietdonhangs")
                        .HasForeignKey("SanPhamId")
                        .HasConstraintName("FK_Chitietdonhang_thuonghieu")
                        .IsRequired();

                    b.Navigation("DonHang");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("Service.Models.Chucnang", b =>
                {
                    b.HasOne("Service.Models.Loaihang", "LoaiHang")
                        .WithMany()
                        .HasForeignKey("LoaiHangId")
                        .HasConstraintName("FK_Chucnang_Loaihang");

                    b.HasOne("Service.Models.Sanpham", "SanPham")
                        .WithMany()
                        .HasForeignKey("SanPhamId")
                        .HasConstraintName("FK_Chucnang_Sanpham")
                        .IsRequired();

                    b.Navigation("LoaiHang");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("Service.Models.Donhang", b =>
                {
                    b.HasOne("Service.Models.User", "User")
                        .WithMany("Donhangs")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Donhang_users")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Service.Models.Hinh", b =>
                {
                    b.HasOne("Service.Models.Sanpham", "HinhNavigation")
                        .WithOne("Hinh")
                        .HasForeignKey("Service.Models.Hinh", "HinhId")
                        .HasConstraintName("FK_Hinh_SP")
                        .IsRequired();

                    b.Navigation("HinhNavigation");
                });

            modelBuilder.Entity("Service.Models.Sanpham", b =>
                {
                    b.HasOne("Service.Models.Khuyenmai", "KhuyenMai")
                        .WithMany("Sanphams")
                        .HasForeignKey("KhuyenMaiId")
                        .HasConstraintName("FK_Sanpham_khuyenmai");

                    b.HasOne("Service.Models.Thuonghieu", "ThuongHieu")
                        .WithMany("Sanphams")
                        .HasForeignKey("ThuongHieuId")
                        .HasConstraintName("FK_Sanpham_thuonghieu")
                        .IsRequired();

                    b.HasOne("Service.Models.User", "User")
                        .WithMany("Sanphams")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Sanpham_User");

                    b.Navigation("KhuyenMai");

                    b.Navigation("ThuongHieu");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Service.Models.Donhang", b =>
                {
                    b.Navigation("Chitietdonhangs");
                });

            modelBuilder.Entity("Service.Models.Khuyenmai", b =>
                {
                    b.Navigation("Sanphams");
                });

            modelBuilder.Entity("Service.Models.Sanpham", b =>
                {
                    b.Navigation("Chitietdonhangs");

                    b.Navigation("Hinh");
                });

            modelBuilder.Entity("Service.Models.Thuonghieu", b =>
                {
                    b.Navigation("Sanphams");
                });

            modelBuilder.Entity("Service.Models.User", b =>
                {
                    b.Navigation("Donhangs");

                    b.Navigation("Sanphams");
                });
#pragma warning restore 612, 618
        }
    }
}
